// Generated by CoffeeScript 1.7.1
(function() {
  var Storage, fs, path,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  path = require("path");

  fs = require("fs");

  Storage = (function() {
    function Storage(filename) {
      if (filename == null) {
        filename = "db";
      }
      this.json = __bind(this.json, this);
      this.get = __bind(this.get, this);
      this.push = __bind(this.push, this);
      this.set = __bind(this.set, this);
      this.path = path.join(__dirname, '../db', "" + filename + ".json");
      try {
        JSON.parse(fs.readFileSync(this.path));
      } catch (_error) {
        fs.writeFileSync(this.path, "{}");
      }
    }

    Storage.prototype.set = function(key, value) {
      var data, db;
      data = fs.readFileSync(this.path);
      db = JSON.parse(data);
      db[key] = value;
      return fs.writeFileSync(this.path, JSON.stringify(db));
    };

    Storage.prototype.push = function(key, obj) {
      var data, db;
      data = fs.readFileSync(this.path);
      db = JSON.parse(data);
      if (!db[key]) {
        db[key] = [];
      }
      db[key].push(obj);
      return fs.writeFileSync(this.path, JSON.stringify(db));
    };

    Storage.prototype.get = function(key) {
      var data, db;
      data = fs.readFileSync(this.path);
      db = JSON.parse(data);
      if (key) {
        return db[key];
      } else {
        return db;
      }
    };

    Storage.prototype.json = function() {
      return fs.readFileSync(this.path);
    };

    return Storage;

  })();

  module.exports = new Storage();

}).call(this);
